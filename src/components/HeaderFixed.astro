---
import LanguageSelector from "./LanguageSelector.astro";

import { useTranslations, getLangFromUrl } from "../i18n/utils";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<header 
  class="text-mono grow-0 fixed bg-background/60 backdrop-blur-lg z-10 w-full border-b border-secondary -translate-y-full transition-transform duration-300"
  id="fixed-header"
  >
  <div
    class="grid grid-cols-3 items-center justify-items-center h-24 w-full container m-auto"
  >
    {
        <h2 class="justify-self-start hidden sm:block">
          <a href={`/${lang}#start`} class="break-keep [line-break:strict] break-words whitespace-normal">{t("general.name")} <br /> {t("general.surname")}</a>
        </h2>
    }
    <!-- NAVBAR -->
    <nav class="hidden gap-6 md:flex break-keep [line-break:strict] break-words whitespace-normal">
      <a href={`/${lang}#start`} class="anim-underline">{t("nav.home")}</a>
      <a href={`/${lang}#blog`} class="anim-underline">{t("nav.blog")}</a>
      <a href={`/${lang}#about`} class="anim-underline">{t("nav.about")}</a>
      <a href={`/${lang}#studies`} class="anim-underline">{t("nav.studies")}</a>
    </nav>

    <!-- mobile navbar button -->
    <nav class="flex md:hidden justify-self-start md:justify-self-center">
      <button
        class="btn btn-ghost btn-circle cursor-pointer"
        id="mobile-menu-toggle-fixed"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-6 w-6"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M4 6h16M4 12h16m-7 6h7"></path>
        </svg>
      </button>
    </nav>

    <div class={`block sm:hidden`}></div>

    <LanguageSelector fixed={true} />
  </div>

</header>
    <!-- mobile navbar -->
  <div
    class="h-lvh w-lvw top-0 right-0 fixed bg-gray-900/50 z-50 hidden"
    id="nav-mobile-fixed"
  >
    <div
      class="w-3/4 h-lvh bg-background transition-transform duration-300 -translate-x-full flex flex-col"
    >
      <nav class="gap-4 flex flex-col pt-40 px-10 grow-1">
        <a href={`/${lang}#start`} class="anim-underline">{t("nav.home")}</a>
        <a href={`/${lang}#blog`} class="anim-underline">{t("nav.blog")}</a>
        <a href={`/${lang}#about`} class="anim-underline">{t("nav.about")}</a>
        <a href={`/${lang}#studies`} class="anim-underline"
          >{t("nav.studies")}</a
        >
      </nav>
      <p class="font-mono px-10 text-right text-xs pb-20">
        {t("nav.clickToClose")}
      </p>
    </div>
    <div class="w-1/4 h-lvh absolute right-0 top-0" id="exit-mobile-nav-fixed"></div>
  </div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const toggleBtn = document.getElementById("mobile-menu-toggle-fixed");
    const navMobile = document.getElementById("nav-mobile-fixed");
    const exitZone = document.getElementById("exit-mobile-nav-fixed");
    const navMobileContent = navMobile?.firstElementChild;

    let scrollY = 0;

    const closeNav = () => {
      document.body.style.position = '';
      document.body.style.top = '';
      document.body.style.left = '';
      document.body.style.right = '';
      document.body.style.overflow = '';

      window.scrollTo({
          left: 0, 
          top: scrollY,
          behavior: 'instant'
        });
      navMobileContent?.classList.add("-translate-x-full");
      setTimeout(() => {
        navMobile?.classList.add("hidden");
      }, 300);
    };

    exitZone?.addEventListener("click", closeNav);

    toggleBtn?.addEventListener("click", () => {
      // document.body.classList.add("overflow-hidden");
      scrollY = window.scrollY;
      document.body.style.position = 'fixed';
      document.body.style.top = `-${scrollY}px`;
      document.body.style.left = '0';
      document.body.style.right = '0';
      navMobile?.classList.remove("hidden");
      setTimeout(() => {
        navMobileContent?.classList.remove("-translate-x-full");
      }, 100);
    });

    const header = document.getElementById("fixed-header");

    const handleScroll = () => {
      const currentScrollY = window.scrollY;

      if (currentScrollY > 300) {
        header?.classList.remove("-translate-y-full");
        header?.classList.add("translate-y-0");
      } else {
        header?.classList.remove("translate-y-0");
        header?.classList.add("-translate-y-full");
      }
    };

    window.addEventListener("scroll", handleScroll);
  });
</script>
