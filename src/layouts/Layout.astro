---
import "@fontsource/fira-code";
import "@fontsource/fira-mono";

import "@fontsource-variable/jetbrains-mono";
import "@fontsource-variable/public-sans";

// Supports weights 100-700
import "@fontsource-variable/m-plus-1-code";
// Supports weights 100-900
import "@fontsource-variable/m-plus-2";

import { getLangFromUrl, useTranslations } from "../i18n/utils.ts";

import "../styles/global.css";

interface Props {
  title: string;
}

const { title } = Astro.props;

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
// meta.decription = t("meta.description");
// meta.title = t("meta.title");
// meta.bannerAlt = t("meta.bannerAlt");
---

<html lang={lang} class="scroll-smooth">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"
    />
    <meta name="description" content={t("meta.description")} />
    <meta name="keywords" content="portfolio, desarrollador web, C++, React, programación, diseño, software, Alejandro Vidal Casado" />
    <meta name="author" content="Alejandro Vidal Casado">
    <link rel="canonical" href="https://alejandrovidal.dev/">
    <!-- Open Graph -->
    <meta property="og:type" content="website">
    <meta property="og:url" content="https://alejandrovidal.dev/">
    <meta property="og:title" content={t("meta.title")} />
    <meta property="og:description" content={t("meta.description")} />
    <meta property="og:image" content="https://alejandrovidal.dev/banner.png">
    <meta property="og:image:alt" content={t("meta.bannerAlt")} />
    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:url" content="https://alejandrovidal.dev/">
    <meta name="twitter:title" content={t("meta.title")} />
    <meta name="twitter:description" content={t("meta.description")} />
    <meta name="twitter:image" content="https://alejandrovidal.dev/banner.png">
    <meta name="generator" content={Astro.generator} />
    <script is:inline>
      // cuando haces click, se genera un cuadrado debajo de tu cursor
      document.addEventListener("click", (e) => {
        const ripple = document.createElement("div");
        ripple.classList.add("ripple");
        ripple.style.left = `${e.pageX}px`;
        ripple.style.top = `${e.pageY}px`;

        document.body.appendChild(ripple);

        // Eliminar el elemento después de la animación
        ripple.addEventListener("animationend", () => {
          ripple.remove();
        });
      });
    </script>
    <title>{title}</title>
  </head>
  <body
    class="font-sans bg-background min-h-screen text-primary w-screen overflow-x-hidden"
  >
    <slot />
  </body>
</html>
