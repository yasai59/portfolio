---
import Layout from "../../../layouts/Layout.astro";
import Header from "../../../components/Header.astro";
import Footer from "../../../components/Footer.astro";
import SectionTitle from "../../../components/SectionTitle.astro";
import { languages } from "../../../i18n/ui";
import { getLangFromUrl, useTranslations } from "../../../i18n/utils";
import { getCollection } from "astro:content";
import type { GetStaticPaths } from "astro";
import BlogPreview from "../../../components/BlogPreview.astro";
const posts = (await getCollection("blog")).filter((p: any) =>
  p.slug.startsWith(Astro.params.lang),
);

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);


export const getStaticPaths = (() => {
  let paths = [];

  for (const key of Object.keys(languages)) {
    paths.push({ params: { lang: key } });
  }
  return paths;
}) satisfies GetStaticPaths;
---

<Layout title="Blog">
  <div class="min-h-lvh">
    <Header />
    <div class="container m-auto">
      <SectionTitle>{t('blog.title')}</SectionTitle>
      <div class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 mt-5 gap-15">
        {
          posts.map((post) => (
            <BlogPreview post={post as any} />
          ))
        }
      </div>
    </div>
  </div>
  <Footer />
</Layout>
